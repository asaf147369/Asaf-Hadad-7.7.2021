{"version":3,"sources":["styles/theme.ts","components/header/Nav.tsx","components/common/container/Container.tsx","components/common/col/Col.tsx","components/common/text/Title.tsx","components/header/Header.tsx","components/common/row/Row.tsx","components/common/text/Text.tsx","utils/http.ts","utils/api_key.ts","store/weatherApi.ts","store/weatherSlice.ts","components/main/board/Head.tsx","utils/date.ts","components/main/board/Forecast.tsx","components/main/search/useSearch.tsx","components/main/search/Search.tsx","components/common/Spinner/Spinner.tsx","components/main/Main.tsx","components/favorites/Favorites.tsx","components/common/alert/Alert.tsx","App.tsx","store/store.ts","serviceWorker.ts","index.tsx","components/header/header.module.scss"],"names":["lightTheme","body","fontColor","inputColor","themeColor","switchColor","darkTheme","GlobalStyles","createGlobalStyle","props","theme","Nav","className","Styles","ul","link","to","SContainer","styled","div","dir","width","maxWidth","justify","alignItems","padding","margin","height","border","radius","wrap","overflow","Container","SCol","flex","Col","Title","Heading","level","children","Header","setTheme","switch","size","color","Switch","onChange","cur","name","style","SRow","Row","SText","p","weight","textAlign","cursor","Text","http","url","a","axios","headers","method","API_KEY","getLocationApi","createAsyncThunk","value","rejectWithValue","data","message","getWeatherApi","location","Key","weather","getForecastApi","DailyForecasts","getCurrentByGeoLocation","lat","lng","dispatch","weatherSlice","createSlice","initialState","places","current","forecast","favorites","loading","error","reducers","handleFavorite","state","payload","some","fav","filter","id","uuidv4","locationName","LocalizedName","push","changeCurrent","extraReducers","pending","toString","fulfilled","rejected","actions","Head","useDispatch","existInFavorite","length","favorite","handleClick","IsDayTime","Temperature","Metric","Value","Unit","Imperial","IconButton","onClick","WeatherText","date","isDay","moment","format","Forecast","Fragment","map","dailyForcast","src","Day","Icon","alt","IconPhrase","Date","Minimum","Maximum","React","memo","useSearch","useSelector","handleChange","e","target","handleSelected","place","withTheme","Autocomplete","options","getOptionLabel","option","getOptionSelected","Version","event","borderRadius","renderInput","params","TextField","label","variant","background","InputProps","endAdornment","CircularProgress","Spinner","type","Main","console","log","alignSelf","Favorites","history","useHistory","WeatherIcon","useStyles","makeStyles","root","position","bottom","left","transform","SimpleAlerts","classes","useState","visible","setVisible","useEffect","timeout1","fn","setTimeout","clearTimeout","opacity","transition","Alert","severity","StyledApp","App","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","tlvDefaultLocation","AdministrativeArea","ID","Country","Rank","Type","exact","path","component","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","weatherReducer","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.c14179ea.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const lightTheme = {\r\n  body: '#fff',\r\n  fontColor: '#121212',\r\n  inputColor: 'transparent',\r\n  themeColor: '#004550',\r\n  switchColor: '#f50057'\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: '#121212',\r\n  fontColor: '#fff',\r\n  inputColor: '#fff',\r\n  themeColor: '#BB86FC',\r\n  switchColor: '#f50057'\r\n};\r\n\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  html{\r\n    font-size: 16px;\r\n    @media (max-width: 768px) {\r\n      font-size: 13px;\r\n    }\r\n  }\r\n  body {\r\n    background: ${(props:Theme) => props.theme.body};\r\n    color: ${( props:Theme) => props.theme.fontColor};\r\n    --themeColor: ${( props:Theme) => props.theme.themeColor};\r\n    --switchColor: ${(props: Theme) => props.theme.switchColor};\r\n  }\r\n  h1,h2,h3, a {\r\n\t  color: ${( props:Theme) => props.theme.themeColor};\r\n    margin-top: 0;\r\n  }\r\n  input::placeholder {\r\n    color: ${( props:Theme) => props.theme.inputColor};\r\n  }\r\n  label {\r\n    background: white;\r\n  }\r\n  `\r\n\r\ninterface Theme {\r\n  theme: {\r\n    body: string;\r\n    fontColor: string;\r\n    themeColor: string;\r\n    inputColor: string;\r\n    switchColor: string;\r\n  }\r\n}\r\n","import { Link } from 'react-router-dom';\r\nimport Styles from './header.module.scss';\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <ul className={Styles.ul}>\r\n      <li>\r\n        <Link className={Styles.link} to=\"/\">\r\n          Home\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link className={Styles.link} to=\"/favorite\">\r\n          Favorites\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import styled from 'styled-components';\r\n\r\nconst SContainer = styled.div<Props>`\r\n  display: flex;\r\n  flex-direction: ${({ dir }) => dir};\r\n  width: ${({ width }) => width};\r\n  max-width: ${({ maxWidth }) => maxWidth};\r\n  justify-content: ${({ justify }) => justify};\r\n  align-items: ${({ alignItems }) => alignItems};\r\n  padding: ${({ padding }) => padding};\r\n  margin: ${({ margin }) => margin};\r\n  height: ${({ height }) => height};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ radius }) => radius};\r\n  flex-wrap: ${({ wrap }) => wrap};\r\n  overflow: ${({ overflow }) => overflow};\r\n  @media (max-width: 768px) {\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n  }\r\n`;\r\n  // border-bottom: ${({ borderBottom }) => borderBottom};\r\n  \r\nexport const Container = (props:Props) => {\r\n  return <SContainer {...props} />;\r\n};\r\n\r\n\r\ninterface Props {\r\n  dir?: string;\r\n  width?: string;\r\n  maxWidth?: string;\r\n  justify?: string;\r\n  alignItems?: string;\r\n  padding?: string;\r\n  margin?: string;\r\n  height?: string;\r\n  border?: string;\r\n  // borderBottom: string;\r\n  radius?: string;\r\n  wrap?: string;\r\n  overflow?: string;\r\n  children: JSX.Element[] | JSX.Element;\r\n}\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst SCol = styled.div<Props>`\r\n  display: flex;\r\n  flex: ${({ flex }) => flex};\r\n  flex-direction: ${({ dir }) => dir};\r\n  justify-content: ${({ justify }) => justify};\r\n  align-items: ${({ alignItems }) => alignItems};\r\n  padding: ${({ padding }) => padding};\r\n  margin: ${({ margin }) => margin};\r\n  height: ${({ height }) => height};\r\n  width: ${({ width }) => width};\r\n  border: ${({border}) => border};\r\n  border-radius: ${({ radius }) => radius};\r\n  className: ${({className}) => className};\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Col = (props:Props) => {\r\n  return <SCol {...props} />;\r\n};\r\n\r\ninterface Props {\r\n  flex?: string;\r\n  dir?: string;\r\n  justify?: string;\r\n  alignItems?: string;\r\n  padding?: string;\r\n  margin?: string;\r\n  height?: string;\r\n  width?: string;\r\n  border?: string;\r\n  radius?: string;\r\n  cursor?: string;\r\n  children: JSX.Element | JSX.Element[];\r\n  className?: string;\r\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\r\n}\r\n","export const Title = (props:Props) => {\r\n\tconst Heading = `h${props.level}` as keyof JSX.IntrinsicElements;;\r\n\treturn (\r\n\t<Heading {...props}>\r\n        {props.children}\r\n    </Heading>\r\n\t);\r\n};\r\n\r\ninterface Props {\r\n\tlevel: string;\r\n\tchildren: string | string[] | JSX.Element | JSX.Element[] | undefined;\r\n\tmargin?: string;\r\n}\r\n","import React from 'react';\r\nimport Nav from './Nav';\r\nimport { Container } from '../common/container/Container';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { Col } from '../common/col/Col';\r\nimport { BsSun, BsMoon } from 'react-icons/bs';\r\nimport { Title } from '../common/text/Title';\r\nimport Styles from './header.module.scss';\r\n\r\nexport const Header = ({ setTheme } : { setTheme:React.Dispatch<React.SetStateAction<boolean>> }) => {\r\n  return (\r\n    <Container\r\n      justify=\"space-between\"\r\n      alignItems=\"center\"\r\n      padding=\"0 25px\"\r\n      margin=\"0 0 30px 0px\"\r\n      wrap=\"wrap\"\r\n    >\r\n\r\n      <Title level=\"1\" margin=\"0 20px 0 0\">\r\n        Weather App\r\n      </Title>\r\n          <Nav />\r\n        <Col alignItems=\"center\" className={Styles.switch}>\r\n          <BsSun size=\"36px\" color=\"orange\" />\r\n          <Switch\r\n            onChange={() => setTheme((cur:boolean) => !cur)}\r\n            name=\"checkedA\"\r\n            style={{ color: 'var(--themeColor)'}}\r\n          />\r\n          <BsMoon size=\"36px\" color=\"#91A3B0\" />\r\n      </Col>\r\n\r\n    </Container>\r\n  );\r\n};","import styled from 'styled-components';\r\n\r\nconst SRow = styled.div<Props>`\r\n  display: flex;\r\n  flex-direction: ${({ dir }) => dir};\r\n  justify-content: ${({ justify }) => justify};\r\n  align-items: ${({ alignItems }) => alignItems};\r\n  flex-wrap: ${({ wrap }) => wrap};\r\n  padding: ${({ padding }) => padding};\r\n  margin: ${({ margin }) => margin};\r\n  height: ${({ height }) => height};\r\n  overflow: ${({ overflow }) => overflow};\r\n  border: ${({border}) => border};\r\n  @media (max-width: 768px) {\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const Row = (props:Props) => {\r\n  return <SRow {...props} />;\r\n};\r\n\r\n\r\ninterface Props {\r\n  dir?: string;\r\n  justify?: string;\r\n  alignItems?: string;\r\n  wrap?: string\r\n  padding?: string;\r\n  margin?: string;\r\n  height?: string;\r\n  overflow?: string;\r\n  children: JSX.Element | JSX.Element[];\r\n  border?: string;\r\n}\r\n\r\n// export default Row;\r\n","import styled from 'styled-components';\r\n\r\nconst SText = styled.p<Props>`\r\n  font-size: ${(p) => p.size};\r\n  color: ${(p) => p.color};\r\n  font-weight: ${(p) => p.weight};\r\n  margin: ${(p) => (p.margin ? p.margin : '0')};\r\n  padding: ${(p) => (p.padding ? p.padding : '0')};\r\n  text-align: ${(p) => p.textAlign};\r\n  border: ${(p) => p.border};\r\n  cursor: ${(p) => p.cursor};\r\n`;\r\n\r\nexport const Text = (props:Props) => {\r\n  return (\r\n    <SText {...props}>\r\n      {props.children}\r\n    </SText>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  size?: string;\r\n  color?: string;\r\n  weight?: string;\r\n  margin?: string;\r\n  padding?: string;\r\n  children: string | string[] | null;\r\n  textAlign?: string;\r\n  border?: string;\r\n  onClick?: any;\r\n  cursor?: string;\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const http = async (url:string) =>\r\n  await axios({\r\n    headers: {\r\n      'content-type': null\r\n    },\r\n    method: 'GET',\r\n    url\r\n  });\r\n","export const API_KEY = 'Y8sDbwrRlZwrC54jHcVeAvb9VvwvzTAi';","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { http } from '../utils/http';\r\nimport { API_KEY } from '../utils/api_key';\r\n\r\nimport { Location } from \"../interfaces/Location\";\r\n\r\nexport const getLocationApi = createAsyncThunk(\r\n  'weather/getPlaces',\r\n  async (value:Location, { rejectWithValue }) => {\r\n    try {\r\n      const { data } : { data:Location } = await http(\r\n        `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${value}`\r\n      );\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getWeatherApi = createAsyncThunk(\r\n  'weather/getWeather',\r\n  async (location:Location, { rejectWithValue }) => {\r\n    try {\r\n      const { data } : { data:Location[]} = await http(\r\n        `https://dataservice.accuweather.com/currentconditions/v1/${location.Key}?apikey=${API_KEY}&metric=true`\r\n      );\r\n      return { weather: data[0], location };\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getForecastApi = createAsyncThunk(\r\n  'weather/getForecast',\r\n  async (location:Location, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await http(\r\n        `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${location.Key}?apikey=${API_KEY}&metric=true`\r\n      );\r\n      return data.DailyForecasts;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getCurrentByGeoLocation = createAsyncThunk(\r\n  'weather/getByGeo',\r\n  async ({ lat, lng }: {lat:number, lng:number}, { rejectWithValue, dispatch }) => {\r\n    try {\r\n      const { data } = await http(\r\n        `https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${API_KEY}&q=${lat}%2C%20${lng}`\r\n      );\r\n      dispatch(getWeatherApi(data));\r\n      dispatch(getForecastApi(data));\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n  getLocationApi,\r\n  getWeatherApi,\r\n  getForecastApi,\r\n  getCurrentByGeoLocation,\r\n} from './weatherApi';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { State } from \"../interfaces/State\";\r\nimport { Fav } from '../interfaces/Fav';\r\nimport { Current } from '../interfaces/Current';\r\n\r\nconst initialState:Readonly<State> = {\r\n  places: [],\r\n  weather: {},\r\n  current: {\r\n    location: null,\r\n    weather: null,\r\n    forecast: [],\r\n  },\r\n  favorites: [],\r\n  loading: false,\r\n  error: '',\r\n};\r\n\r\nexport const weatherSlice = createSlice({\r\n  name: 'state',\r\n  initialState,\r\n  reducers: {\r\n    handleFavorite: (state: State, { payload }: { payload: any }) => {\r\n      let exist:boolean;\r\n      if(state.favorites) {\r\n        exist = state.favorites.some((fav) => fav.location.Key === payload.location.Key);\r\n      } else {\r\n        exist = false;\r\n      }\r\n\r\n      if (exist) {\r\n        state.favorites = state.favorites.filter(\r\n          (fav) => fav.location.Key !== payload.location.Key\r\n        );\r\n      } else {\r\n        const fav:Fav = {\r\n          id: uuidv4(),\r\n          locationName: payload.location.LocalizedName,\r\n          ...payload,\r\n        }\r\n        state.favorites.push(fav);\r\n      }\r\n    },\r\n    changeCurrent: (state:State, { payload }: {payload: Current}) => {\r\n      state.current = payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getLocationApi.pending.toString()]: (state:State) => {\r\n      state.loading = true;\r\n      state.error = '';\r\n    },\r\n    [getLocationApi.fulfilled.toString()]: (state:State, { payload }) => {\r\n      state.loading = false;\r\n      state.places = payload;\r\n    },\r\n    [getLocationApi.rejected.toString()]: (state:State, { error }) => {\r\n      state.loading = false;\r\n      state.error = error.message;\r\n    },\r\n    [getWeatherApi.pending.toString()]: (state:State) => {\r\n      state.loading = true;\r\n      state.error = '';\r\n    },\r\n    [getWeatherApi.fulfilled.toString()]: (state:State, { payload }) => {\r\n      state.loading = false;\r\n      state.current.location = payload.location;\r\n      state.current.weather = payload.weather;\r\n    },\r\n    [getWeatherApi.rejected.toString()]: (state:State, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    },\r\n    [getForecastApi.pending.toString()]: (state:State) => {\r\n      state.loading = true;\r\n      state.error = '';\r\n    },\r\n    [getForecastApi.fulfilled.toString()]: (state:State, { payload }) => {\r\n      state.loading = false;\r\n      state.current.forecast = payload;\r\n    },\r\n    [getForecastApi.rejected.toString()]: (state:State, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    },\r\n    [getCurrentByGeoLocation.pending.toString()]: (state:State) => {\r\n      state.loading = true;\r\n      state.error = '';\r\n    },\r\n    [getCurrentByGeoLocation.fulfilled.toString()]: (state:State, { payload }) => {\r\n      state.loading = false;\r\n      state.current.location = payload;\r\n    },\r\n    [getCurrentByGeoLocation.rejected.toString()]: (state:State, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { handleFavorite, changeCurrent } = weatherSlice.actions;\r\n\r\nexport default weatherSlice.reducer;\r\n","import { Col } from '../../common/col/Col';\r\nimport { Row } from '../../common/row/Row';\r\nimport { Text } from '../../common/text/Text';\r\nimport { useDispatch } from 'react-redux';\r\nimport { handleFavorite } from '../../../store/weatherSlice';\r\nimport { BsSun, BsMoon, BsHeartFill } from 'react-icons/bs';\r\nimport { IconButton } from '@material-ui/core/';\r\nimport { Fav } from '../../../interfaces/Fav';\r\nimport { Title } from '../../common/text/Title';\r\nimport { Current } from '../../../interfaces/Current';\r\n\r\nconst Head = ({ current, favorites } : {current:Current, favorites?: Fav[]}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  let existInFavorite:boolean = false;\r\n  if (favorites?.length && current.location) {\r\n    existInFavorite = favorites.some(\r\n      (favorite:Fav) => favorite.location.Key === current.location?.Key\r\n    );\r\n  }\r\n\r\n  const handleClick = () => {\r\n    dispatch(handleFavorite(current));\r\n  };\r\n  if (current.weather ) {\r\n    return (\r\n      <Row alignItems=\"center\" height=\"30%\" border=\"0 0 1px 0 solid gray\" wrap=\"wrap\">\r\n        <Col flex={'5%'} margin=\"0 15px\">\r\n          {current.weather?.IsDayTime ? (\r\n            <BsSun size=\"4em\" color=\"orange\" />\r\n          ) : (\r\n            <BsMoon size=\"4em\" color=\"#91A3B0\" />\r\n          )}\r\n        </Col>\r\n        <Col flex={'70%'} dir=\"column\">\r\n          <Title level=\"2\">\r\n            {current.location?.LocalizedName}\r\n          </Title>\r\n          <Text>\r\n            {current.weather.Temperature.Metric.Value}\r\n            {current.weather.Temperature.Metric.Unit} {current.weather.Temperature.Imperial.Value}\r\n            {current.weather.Temperature.Imperial.Unit}\r\n          </Text>\r\n        </Col>\r\n        <Col flex=\"10%\" justify=\"flex-end\" alignItems=\"center\">\r\n          <IconButton onClick={handleClick}>\r\n            <BsHeartFill color={existInFavorite ? '#ff0005' : '#ccc'} style={{ cursor: 'pointer' }} />\r\n          </IconButton>\r\n          <Text border=\"1px solid var(--themeColor)\" padding=\"0 5px 3px\" cursor=\"pointer\" onClick={handleClick}>\r\n            Add to favorites\r\n          </Text>\r\n        </Col>\r\n        <Col flex=\"100%\" justify=\"center\">\r\n          <Title level=\"1\">{current.weather.WeatherText}</Title>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  } else {\r\n    return (\r\n      <Row\r\n        alignItems=\"center\"\r\n        justify=\"space-around\"\r\n        wrap=\"wrap\"\r\n        overflow=\"auto\"\r\n        margin=\"25px 0\"\r\n      >\r\n        <Text>\r\n          An error has occured\r\n        </Text>\r\n      </Row>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Head;\r\n","import moment from 'moment';\r\n\r\nconst date = {\r\n  isDay: (date:Date) => moment(date).format('dddd'),\r\n};\r\n\r\nexport default date;\r\n","import React from 'react';\r\nimport { Col } from '../../common/col/Col';\r\nimport { Row } from '../../common/row/Row';\r\nimport { Text } from '../../common/text/Text';\r\nimport date from '../../../utils/date';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Current } from '../../../interfaces/Current';\r\nimport { Forcast } from '../../../interfaces/Forcast';\r\n\r\nfunction Forecast({ current }: {current: Current}) {\r\n  if(current.forecast?.length) {\r\n    return (\r\n      <Row\r\n        alignItems=\"center\"\r\n        justify=\"space-around\"\r\n        height=\"70%\"\r\n        wrap=\"wrap\"\r\n        overflow=\"auto\"\r\n        margin=\"25px 0\"\r\n      >\r\n        <React.Fragment>\r\n  \r\n          {current.forecast.length > 0 &&\r\n            current.forecast.map((dailyForcast:Forcast) => (\r\n              <Col\r\n                key={uuidv4()}\r\n                dir=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                width=\"15%\"\r\n                radius=\"8px\"\r\n                border=\"1px solid var(--themeColor)\"\r\n                padding=\"25px\"\r\n                margin=\"30px 5px\"\r\n                height=\"200px\"\r\n              >\r\n                <img\r\n                  src={`https://developer.accuweather.com/sites/default/files/${\r\n                    dailyForcast.Day.Icon < 9 ? `0${dailyForcast.Day.Icon}` : dailyForcast.Day.Icon\r\n                  }-s.png`}\r\n                  alt={dailyForcast.Day.IconPhrase}\r\n                />\r\n                <Text size=\"2rem\" margin=\"15px 0\">\r\n                  {date.isDay(dailyForcast.Date)}\r\n                </Text>\r\n                <Text weight=\"500\" size=\"1.2rem\">\r\n                  {dailyForcast.Day.IconPhrase}\r\n                </Text>\r\n                <Text weight=\"500\">\r\n                  Min: {dailyForcast.Temperature.Minimum.Value}\r\n                  {dailyForcast.Temperature.Minimum.Unit} \r\n                  \r\n                  Max: {dailyForcast.Temperature.Maximum.Value}\r\n                  {dailyForcast.Temperature.Maximum.Unit}\r\n                </Text>\r\n              </Col>\r\n            ))}\r\n        </React.Fragment>\r\n      </Row>\r\n    );\r\n  } else {\r\n    return (\r\n      <Row\r\n        alignItems=\"center\"\r\n        justify=\"space-around\"\r\n        height=\"70%\"\r\n        wrap=\"wrap\"\r\n        overflow=\"auto\"\r\n        margin=\"25px 0\"\r\n      >\r\n        <Text>\r\n          An error has occured\r\n        </Text>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default React.memo(Forecast);\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { Location } from '../../../interfaces/Location';\r\nimport { State } from '../../../interfaces/State';\r\nimport { getLocationApi, getWeatherApi, getForecastApi } from '../../../store/weatherApi';\r\n\r\nconst useSearch = () => {\r\n  const { places, loading } = useSelector((state:State) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = async (e:any) => {\r\n    dispatch(getLocationApi(e.target.value));\r\n  };\r\n\r\n  const handleSelected = (place:Location) => {\r\n    dispatch(getWeatherApi(place));\r\n    dispatch(getForecastApi(place));\r\n  };\r\n\r\n  return { places, loading, handleChange, handleSelected };\r\n};\r\n\r\nexport default useSearch;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport useSearch from './useSearch';\r\nimport { withTheme } from 'styled-components';\r\nimport { Location } from '../../../interfaces/Location';\r\n\r\nconst Search = ({ theme }:{theme:any}) => {\r\n  const { places, loading, handleChange, handleSelected } = useSearch();\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"combo-box-demo\"\r\n      options={places || []}\r\n      getOptionLabel={(option:Location) => option.LocalizedName}\r\n      getOptionSelected={(option, value) => option.Version === value.Version}\r\n      onChange={(event, place) => place && handleSelected(place)}\r\n      style={{\r\n        maxWidth: 500,\r\n        margin: '10px auto',\r\n        padding: '25px',\r\n        borderRadius: '8px'\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"search\"\r\n          variant=\"outlined\"\r\n          onChange={handleChange}\r\n          style={{\r\n            background: theme.inputColor,\r\n            borderRadius: '8px'\r\n          }}\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withTheme(Search);\r\n","import Loader from 'react-loader-spinner';\r\n\r\nexport const Spinner = () => {\r\n  return <Loader type=\"BallTriangle\" color=\"var(--themeColor)\" height={100} width={100} />;\r\n};\r\n","import React from 'react';\r\nimport { Container } from '../common/container/Container';\r\nimport Head from './board/Head';\r\nimport Forecast from './board/Forecast';\r\nimport Search from './search/Search';\r\nimport { Spinner } from '../common/Spinner/Spinner';\r\nimport { useSelector } from 'react-redux';\r\nimport { BiSad } from 'react-icons/bi';\r\nimport { State } from '../../interfaces/State';\r\nimport { Text } from '../common/text/Text';\r\n\r\nconst Main = () => {\r\n  const { current, loading, error, favorites } = useSelector((state:State) => {\r\n    console.log(state);\r\n    return state\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Search />\r\n      <Container\r\n        dir=\"column\"\r\n        padding=\"25px\"\r\n        margin=\"0 auto\"\r\n        height=\"100%\"\r\n        maxWidth=\"80%\"\r\n        border=\"1px solid var(--themeColor)\"\r\n        radius=\"8px\"\r\n        justify=\"space-around\"\r\n        alignItems=\"space-around\"\r\n      >\r\n        {loading ? (\r\n          <React.Fragment>\r\n            <Spinner />\r\n          </React.Fragment>\r\n        ) : (current.forecast?.length > 0 ? (\r\n          <React.Fragment>\r\n            <Head current={current} favorites={favorites} />\r\n            <Forecast current={current} />\r\n          </React.Fragment>\r\n          ) : (\r\n          error ? <BiSad size=\"4em\" color=\"var(--themeColor)\" style={{ alignSelf: 'center' }} /> : \r\n          <React.Fragment>\r\n            <Text>\r\n              An error has occured\r\n            </Text>\r\n          </React.Fragment>\r\n        ))}\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { Container } from '../common/container/Container';\r\nimport { Col } from '../common/col/Col';\r\nimport { Text } from '../common/text/Text';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeCurrent } from '../../store/weatherSlice';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Fav } from '../../interfaces/Fav';\r\nimport { State } from '../../interfaces/State';\r\nimport { Title } from '../common/text/Title';\r\n\r\nconst Favorites = () => {\r\n  const { favorites } = useSelector((state: State) => state);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleClick = (favorite: Fav) => {\r\n    const { location, weather, forecast } = favorite;\r\n    dispatch(changeCurrent({ location, weather, forecast }));\r\n    history.push('/');\r\n  };\r\n\r\n  if (favorites && favorites?.length > 0) {\r\n    return (<Container\r\n      dir=\"flex\"\r\n      padding=\"25px\"\r\n      margin=\"auto\"\r\n      height=\"80vh\"\r\n      maxWidth=\"80%\"\r\n      border=\"1px solid var(--themeColor)\"\r\n      radius=\"8px\"\r\n      wrap={'wrap'}\r\n      overflow=\"auto\"\r\n    >\r\n      {favorites.map((favorite: Fav) => (\r\n        <Col\r\n          key={favorite.id}\r\n          dir=\"column\"\r\n          justify=\"space-evenly\"\r\n          alignItems=\"center\"\r\n          width=\"20%\"\r\n          height=\"300px\"\r\n          radius=\"8px\"\r\n          margin=\"30px 5px\"\r\n          border=\"1px solid var(--themeColor)\"\r\n          padding=\" 25px\"\r\n          cursor='pointer'\r\n          onClick={() => handleClick(favorite)}\r\n        >\r\n          <Title level=\"2\" margin=\"15px 0\">\r\n            {favorite.locationName}\r\n          </Title>\r\n          <Text weight=\"500\" size=\"1.2rem\" margin=\"0\">\r\n            {favorite.weather.Temperature.Metric.Value}\r\n            {favorite.weather.Temperature.Metric.Unit}\r\n          </Text>\r\n          <img\r\n            src={`https://developer.accuweather.com/sites/default/files/${favorite.weather.WeatherIcon && favorite.weather.WeatherIcon < 9\r\n                ? `0${favorite.weather.WeatherIcon}`\r\n                : favorite.weather.WeatherIcon\r\n              }-s.png`}\r\n            alt={favorite.weather.WeatherIcon!.toString()}\r\n          />\r\n          <Text weight=\"500\" size=\"1.2rem\" margin=\"0\">\r\n            {favorite.weather.WeatherText!}\r\n          </Text>\r\n        </Col>\r\n      ))}\r\n    </Container>\r\n    )\r\n  }\r\n  return (<Container\r\n    dir=\"flex\"\r\n    padding=\"25px\"\r\n    margin=\"auto\"\r\n    height=\"80vh\"\r\n    maxWidth=\"80%\"\r\n    border=\"1px solid var(--themeColor)\"\r\n    radius=\"8px\"\r\n    wrap={'wrap'}\r\n    justify=\"center\"\r\n    alignItems=\"center\"\r\n    overflow=\"auto\"\r\n  >\r\n    <Col\r\n      dir=\"column\"\r\n      justify=\"space-evenly\"\r\n      alignItems=\"center\"\r\n      width=\"250px\"\r\n      height=\"300px\"\r\n      radius=\"8px\"\r\n      margin=\"10px\"\r\n      border=\"1px solid var(--themeColor)\"\r\n      padding=\" 25px\"\r\n    >\r\n      <Text size=\"2rem\" margin=\"15px 0\" color=\"black\" weight=\"600\">\r\n        No favourites selected\r\n      </Text>\r\n    </Col>\r\n  </Container>\r\n  )\r\n};\r\n\r\nexport default Favorites;\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: '30%',\r\n    margin: '0 auto',\r\n    position: 'absolute',\r\n    bottom: '50px',\r\n    left: '50%',\r\n    transform: 'translateX(-50%)',\r\n  },\r\n}));\r\n\r\nexport default function SimpleAlerts({ error }:{error:string}) {\r\n  const classes = useStyles();\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let timeout1: NodeJS.Timeout;\r\n    const timeout = (fn:Function) =>\r\n      timeout1 = setTimeout(() => {\r\n        fn();\r\n      }, 2500);\r\n\r\n    if (error) {\r\n      setVisible(true);\r\n\r\n      timeout(() => {\r\n        setVisible(false);\r\n      });\r\n    } else {\r\n      return setVisible(false);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timeout1);\r\n    };\r\n  }, [error]);\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{\r\n        opacity: visible ? '1' : '0',\r\n        transition: '0.3s ease',\r\n        transform: visible ? 'translateY(0)' : 'translateY(100px)',\r\n      }}\r\n    >\r\n      <Alert severity=\"error\">{error}</Alert>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport { lightTheme, darkTheme, GlobalStyles } from './styles/theme';\r\n// components\r\nimport { Header } from './components/header/Header';\r\nimport Main from './components/main/Main';\r\nimport Favorites from './components/favorites/Favorites';\r\nimport Alert from './components/common/alert/Alert';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getCurrentByGeoLocation, getForecastApi, getWeatherApi } from './store/weatherApi';\r\nimport { State } from './interfaces/State';\r\n\r\nconst StyledApp = styled.div`\r\n  color: ${({ theme }) => theme.fontColor};\r\n`;\r\n\r\nfunction App() {\r\n  const [ theme, setTheme ] = useState(false);\r\n  const error = useSelector((state:State) => state.error);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (pos) => {\r\n        const lat = pos.coords.latitude;\r\n        const lng = pos.coords.longitude;\r\n        dispatch(getCurrentByGeoLocation({ lat, lng }));\r\n      },\r\n      (error) => {\r\n        const tlvDefaultLocation = {\r\n          AdministrativeArea: { ID: 'TA', LocalizedName: 'Tel Aviv' },\r\n          Country: { ID: 'IL', LocalizedName: 'Israel' },\r\n          Key: '215854',\r\n          LocalizedName: 'Tel Aviv',\r\n          Rank: 31,\r\n          Type: 'City',\r\n          Version: 1,\r\n        };\r\n        dispatch(getWeatherApi(tlvDefaultLocation));\r\n        dispatch(getForecastApi(tlvDefaultLocation));\r\n      }\r\n    );\r\n  },\r\n);\r\n\r\n  return (\r\n    <ThemeProvider theme={!theme ? lightTheme: darkTheme}>\r\n      <GlobalStyles />\r\n      <StyledApp>\r\n        <Router>\r\n          <Header setTheme={setTheme} />\r\n          <Switch>\r\n            <Route exact path=\"/favorite\" component={Favorites} />\r\n            <Route exact path=\"*\" component={Main} />\r\n          </Switch>\r\n          <Alert error={error} />\r\n        </Router>\r\n      </StyledApp>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createStore, applyMiddleware } from '@reduxjs/toolkit';\r\nimport weatherReducer from './weatherSlice';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n\r\nexport const store = createStore(weatherReducer, composedEnhancer);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from '../src/store/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"header_ul__139hO\",\"link\":\"header_link__vLFzk\",\"switch\":\"header_switch__27pdP\"};"],"sourceRoot":""}